{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/Slider/Slider.tsx","components/SegmentedPicker/SegmentedPicker.tsx","views/FrenchPress/quantitiesReducer.ts","views/FrenchPress/FrenchPress.tsx"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","_objectWithoutProperties","excluded","sourceKeys","indexOf","sourceSymbolKeys","prototype","propertyIsEnumerable","call","calculateBackgroundSize","min","max","numericValue","Number","numericMin","Slider","defaultValue","onChange","title","unit","props","backgroundSize","className","e","style","type","SegmentedPicker","name","options","selectedValue","gridTemplateColumns","map","option","defaultChecked","label","actions","cups","coffee","water","concentration","initialQuantities","quantitiesReducer","state","action","payload","Math","round","concentrationOptions","FrenchPress","useReducer","quantities","dispatch","handleQuantitiesChange","quantitiesReducerActions","currentTarget","initialCoffee","id","String"],"mappings":"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","file":"static/js/4.02d2a950.chunk.js","sourcesContent":["import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { ChangeEvent, InputHTMLAttributes } from 'react';\n\nimport './Slider.css';\n\ntype Props = { unit?: string } & InputHTMLAttributes<HTMLInputElement>;\n\nconst calculateBackgroundSize = (\n  min?: string | number,\n  max?: string | number,\n  value?: string | number | readonly string[]\n) => {\n  const numericValue = Number(value);\n  const numericMin = Number(min);\n  const NumericMax = Number(max);\n\n  return (\n    ((numericValue - numericMin) * 100) / (NumericMax - numericMin) + '% 100%'\n  );\n};\n\nconst Slider = ({\n  defaultValue,\n  onChange,\n  max,\n  min,\n  title,\n  unit,\n  value,\n  ...props\n}: Props): JSX.Element => {\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { target } = e;\n    target.style.backgroundSize = calculateBackgroundSize(\n      target.min,\n      target.max,\n      target.value\n    );\n    onChange && onChange(e);\n  };\n\n  const backgroundSize = calculateBackgroundSize(min, max, value);\n\n  return (\n    <div className=\"slider-container\">\n      <div className=\"slider-header\">\n        <span>{title}</span>\n        <span>\n          {value}\n          {unit}\n        </span>\n      </div>\n      <div className=\"slider-input-container\">\n        <input\n          {...props}\n          min={min}\n          max={max}\n          value={value}\n          onChange={handleChange}\n          type=\"range\"\n          className=\"slider\"\n          style={{ backgroundSize }}\n        />\n      </div>\n      <div className=\"slider-footer\">\n        <span>\n          {min}\n          {unit}\n        </span>\n        <span>\n          {max}\n          {unit}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Slider;\n","import React, { ChangeEvent } from 'react';\n\nimport './SegmentedPicker.css';\n\ntype Option = {\n  label: string;\n  value: string;\n};\n\ntype Props = {\n  title?: string;\n  options: Option[];\n  name: string;\n  selectedValue: string;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\n// TODO add border and animation\n\nconst SegmentedPicker = ({\n  name,\n  onChange,\n  options,\n  selectedValue,\n  title,\n}: Props): JSX.Element => {\n  return (\n    <div className=\"segmented-picker-container\">\n      {title && <h3 className=\"segmented-picker-title\">{title}</h3>}\n      <div\n        className=\"segmented-picker-options\"\n        style={{\n          gridTemplateColumns: `repeat(${options.length}, 1fr)`,\n        }}\n      >\n        {options.map((option, i) => (\n          <label className=\"segmented-picker-option-wrapper\" key={i}>\n            <input\n              name={name}\n              type=\"radio\"\n              className=\"segmented-picker-input\"\n              defaultChecked={option.value === selectedValue}\n              onChange={onChange}\n              value={option.value}\n            />\n            <span className=\"segmented-picker-custom\">{option.label}</span>\n          </label>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SegmentedPicker;\n","type QuantitiesState = {\n  cups: number;\n  coffee: number;\n  water: number;\n  concentration: number;\n};\n\ntype QuantitiesAction =\n  | { type: 'increaseCups'; payload: number }\n  | { type: 'increaseCoffee'; payload: number }\n  | { type: 'increaseWater'; payload: number }\n  | { type: 'changeConcentration'; payload: number };\n\nexport const actions: {\n  [key: string]:\n    | 'increaseCups'\n    | 'increaseCoffee'\n    | 'increaseWater'\n    | 'changeConcentration';\n} = {\n  cups: 'increaseCups',\n  coffee: 'increaseCoffee',\n  water: 'increaseWater',\n  concentration: 'changeConcentration',\n};\n\nexport const initialQuantities = {\n  cups: 1,\n  coffee: 16,\n  water: 236,\n  concentration: 14,\n};\n\nexport const quantitiesReducer = (\n  state: QuantitiesState,\n  action: QuantitiesAction\n) => {\n  const { type, payload } = action;\n  switch (type) {\n    case actions.cups:\n      return {\n        ...state,\n        cups: payload,\n        coffee: Math.round(\n          (payload * initialQuantities.water) / state.concentration\n        ),\n        water: Math.round(payload * initialQuantities.water),\n      };\n    case actions.coffee:\n      return {\n        ...state,\n        cups: Math.round(\n          payload / (initialQuantities.water / state.concentration)\n        ),\n        coffee: payload,\n        water: Math.round(\n          (payload * initialQuantities.water) /\n            (initialQuantities.water / state.concentration)\n        ),\n      };\n    case actions.water:\n      return {\n        ...state,\n        cups: Math.round(\n          (payload * initialQuantities.cups) / initialQuantities.water\n        ),\n        coffee: Math.round(\n          (payload * (initialQuantities.water / state.concentration)) /\n            initialQuantities.water\n        ),\n        water: payload,\n      };\n    case actions.concentration:\n      return {\n        ...state,\n        concentration: payload,\n        coffee: Math.round(state.water / payload),\n      };\n    default:\n      return state;\n  }\n};\n","import React, { ChangeEvent, useReducer } from 'react';\n\nimport SegmentedPicker from '../../components/SegmentedPicker';\nimport Slider from '../../components/Slider';\n\nimport {\n  actions as quantitiesReducerActions,\n  initialQuantities,\n  quantitiesReducer,\n} from './quantitiesReducer';\n\nimport './FrenchPress.css';\n\nconst concentrationOptions = [\n  { label: 'light', value: '18' },\n  { label: 'medium', value: '14' },\n  { label: 'strong', value: '10' },\n];\n\nconst FrenchPress = (): JSX.Element => {\n  const [quantities, dispatch] = useReducer(\n    quantitiesReducer,\n    initialQuantities\n  );\n  const handleQuantitiesChange = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch({\n      type: quantitiesReducerActions[e.currentTarget.name],\n      payload: Number(e.currentTarget.value),\n    });\n  };\n\n  const initialCoffee = Math.round(\n    initialQuantities.water / quantities.concentration\n  );\n\n  return (\n    <div className=\"french-press-container\">\n      <h1>French Press Calculator</h1>\n      <div className=\"quantities-container section\">\n        <h2>Quantities</h2>\n        <div className=\"quantity-slider-container\">\n          <Slider\n            min=\"1\"\n            max=\"10\"\n            defaultValue=\"1\"\n            id=\"cupsRange\"\n            title=\"Cups\"\n            name=\"cups\"\n            value={quantities.cups}\n            onChange={handleQuantitiesChange}\n          />\n        </div>\n        <div className=\"quantity-slider-container\">\n          <Slider\n            min={initialCoffee}\n            max={initialCoffee * 10}\n            defaultValue={initialCoffee}\n            id=\"coffeeRange\"\n            title=\"Coffee\"\n            unit=\"gr\"\n            name=\"coffee\"\n            value={quantities.coffee}\n            onChange={handleQuantitiesChange}\n          />\n        </div>\n        <div className=\"quantity-slider-container\">\n          <Slider\n            min=\"236\"\n            max=\"2360\"\n            defaultValue=\"236\"\n            id=\"waterRange\"\n            title=\"Water\"\n            name=\"water\"\n            value={quantities.water}\n            unit=\"gr\"\n            onChange={handleQuantitiesChange}\n          />\n        </div>\n      </div>\n      <div className=\"quantities-container section\">\n        <h2>Preferences</h2>\n        <SegmentedPicker\n          name=\"concentration\"\n          title=\"Concentration\"\n          options={concentrationOptions}\n          selectedValue={String(quantities.concentration)}\n          onChange={handleQuantitiesChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FrenchPress;\n"],"sourceRoot":""}